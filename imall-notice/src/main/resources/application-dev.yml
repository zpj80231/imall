# 服务器端口
server:
  port: 8200

# spring相关
spring:
  redis:
    database: 0
    host: localhost         # Redis服务器地址
    port: 6379              # Redis服务器连接端口
    password:               # Redis服务器连接密码（默认为空）
    pool:
      max-active: 200       # 连接池最大连接数（使用负值表示没有限制）
      max-idle: 10          # 连接池中的最大空闲连接
      max-wait: -1          # 连接池最大阻塞等待时间（使用负值表示没有限制）
      min-idle: 0           # 连接池中的最小空闲连接
    timeout: 1000           # 连接超时时间（毫秒）
  rabbitmq:
    addresses: 127.0.0.1
    port: 5672
    username: guest
    password: guest
    # 是否启用【发布返回】 确认消息从交换机到队列
    publisher-returns: true
    # 是否启用【发布确认】 确认消息到交换机
    publisher-confirm-type: correlated
    listener:
      simple:
        # 消费者将预处理模式更改为每次读取1条消息,在消费者未回执确认之前,生产者不再进行下一条消息的投送。
        prefetch: 1
        # 消费者设置确认模式为手动ack
        #        acknowledge-mode: manual
        # 消费者线程最小数量
        concurrency: 1
        # 消费者线程最大数量
        max-concurrency: 10
        # 消费者自动启动
        auto-startup: false
        retry:
          enabled: true # 开启重试
          max-attempts: 5 # 重试次数
          max-interval: 10000   # 重试最大间隔时间ms
          initial-interval: 3000  # 重试初始间隔时间ms
          multiplier: 2 # 间隔时间乘子，间隔时间*乘子=下一次的间隔时间，最大不能超过设置的最大间隔时间
#        default-requeue-rejected: false

# 项目
notice:
  # 生产者模式
  producer-model: true
  # 消费者模式
  consumer-model: true
asterisk:
  hostname: 127.0.0.1
  port: 5038
  username: admin
  password: admin

logging:
  level:
    com.imall: debug
  pattern:
    dateformat: yyyy-MM-dd HH:mm:ss.SSS
  file:
    path: logs/
